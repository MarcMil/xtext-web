apply from: "${rootDir}/gradle/default-project-layout.gradle"

apply plugin: 'war'

dependencies {
	api project(':org.eclipse.xtext.web.servlet')
	api project(':org.eclipse.xtext.web.example.statemachine.ide')
	api project(':org.eclipse.xtext.xbase.web')
	api project(':org.eclipse.xtext.web.example.entities.ide')
	api group: 'org.webjars', name: 'requirejs', version: '2.3.6'
	api group: 'org.webjars', name: 'requirejs-text', version: '2.0.15'
	api group: 'org.webjars', name: 'jquery', version: '3.6.0'
	api group: 'org.webjars', name: 'ace', version: '1.3.3'
	api group: 'org.webjars', name: 'codemirror', version: '5.41.0'
	providedCompile group: 'org.eclipse.jetty', name: 'jetty-annotations', version: '9.4.+'
	providedCompile group: 'org.eclipse.jetty', name: 'jetty-rewrite', version: '9.4.+'
	providedCompile group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '5.0.0'
	api group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.+'
	api group: 'log4j', name: 'log4j'
}

/* 
 * The following download/unpack tasks are currently necessary 
 * because Eclipse Orion does not provide easily consumable artifacts
 */

def orionDir = file('src/main/webapp/orion')
def orionZip = file("$buildDir/orion/built-codeEdit.zip")
/*
 * Since version 18 the ContentAssist ist broken. We issued bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=543541
 * If this bug is resolved we could update orion.
 */
def orionUrl = 'https://www.eclipse.org/downloads/download.php?file=/orion/drops/R-17.0-201801111044/built-codeEdit.zip&r=1'

task downloadOrion {
	onlyIf {!orionZip.exists()}
	doLast {
		orionZip.parentFile.mkdirs()
		println "Download $orionUrl"
		ant.get(src: orionUrl, dest: orionZip)
	}
}

task unpackOrion(type: Copy) {
	onlyIf {!orionDir.exists()}
	dependsOn(downloadOrion)
	from(zipTree(orionZip))
	into(orionDir)
}

task jettyRun(type:JavaExec) {
	dependsOn(sourceSets.main.runtimeClasspath, unpackOrion)
	classpath = sourceSets.main.runtimeClasspath.filter{it.exists()}
	mainClass = "org.eclipse.xtext.web.example.jetty.ServerLauncher"
	standardInput = System.in
}

tasks.eclipse.dependsOn(unpackOrion)
tasks.war.dependsOn(unpackOrion)

task zipTestFiles(type: Zip) {
	from('test-files') {
		include '**/*'
		into 'test-files'
	}
	destinationDirectory = new File( project.buildDir,'libs')
	archiveFileName = 'test-files.zip'
}

tasks.war.dependsOn(zipTestFiles)

war {
	filesMatching('**/*.html') {
       filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: ["xtext-version-placeholder": project.version])
    }
}

eclipse {
	project {
		file.whenMerged {
			natures.remove('org.eclipse.wst.common.modulecore.ModuleCoreNature')
		}
	}
}
